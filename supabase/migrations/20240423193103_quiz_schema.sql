SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."answer" (
    "id" bigint NOT NULL,
    "question_id" bigint NOT NULL,
    "text" "text",
    "src" "text",
    "is_correct" boolean DEFAULT false NOT NULL,
    "order" smallint DEFAULT '1'::smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."answer" OWNER TO "postgres";

ALTER TABLE "public"."answer" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."answer_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game" (
    "id" bigint NOT NULL,
    "quiz_id" bigint NOT NULL,
    "slug" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "host_key" "uuid" DEFAULT "gen_random_uuid"()
);

ALTER TABLE "public"."game" OWNER TO "postgres";

ALTER TABLE "public"."game" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."hint" (
    "id" bigint NOT NULL,
    "question_id" bigint,
    "text" "text",
    "src" "text",
    "price" smallint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."hint" OWNER TO "postgres";

ALTER TABLE "public"."hint" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hint_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."participant" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "game_id" bigint NOT NULL,
    "nickname" "text" NOT NULL,
    "src" "text",
    "coins" smallint DEFAULT '0'::smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."participant" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."participant_answer" (
    "participant_id" "uuid" NOT NULL,
    "question_id" bigint NOT NULL,
    "answer" "text",
    "points" smallint DEFAULT '0'::smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."participant_answer" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."question" (
    "id" bigint NOT NULL,
    "topic_id" bigint NOT NULL,
    "text" "text",
    "src" "text",
    "type" smallint,
    "thinking_time" smallint,
    "order" smallint DEFAULT '1'::smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."question" OWNER TO "postgres";

ALTER TABLE "public"."question" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."question_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."quiz" (
    "id" bigint NOT NULL,
    "text" "text" NOT NULL,
    "src" "text",
    "thinking_time" smallint,
    "type" smallint,
    "scoring_system" smallint,
    "user_id" "uuid" DEFAULT "auth"."uid"(),
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."quiz" OWNER TO "postgres";

ALTER TABLE "public"."quiz" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."quiz_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."topic" (
    "id" bigint NOT NULL,
    "quiz_id" bigint NOT NULL,
    "text" "text",
    "src" "text",
    "order" smallint DEFAULT '1'::smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."topic" OWNER TO "postgres";

ALTER TABLE "public"."topic" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."topic_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."answer"
    ADD CONSTRAINT "answer_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "game_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "game_slug_key" UNIQUE ("slug");

ALTER TABLE ONLY "public"."hint"
    ADD CONSTRAINT "hint_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."participant_answer"
    ADD CONSTRAINT "participant_answer_pkey" PRIMARY KEY ("participant_id", "question_id");

ALTER TABLE ONLY "public"."participant"
    ADD CONSTRAINT "participant_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."question"
    ADD CONSTRAINT "question_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."quiz"
    ADD CONSTRAINT "quiz_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."topic"
    ADD CONSTRAINT "topic_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."answer"
    ADD CONSTRAINT "public_answer_question_id_fkey" FOREIGN KEY ("question_id") REFERENCES "public"."question"("id");

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "public_game_quiz_id_fkey" FOREIGN KEY ("quiz_id") REFERENCES "public"."quiz"("id");

ALTER TABLE ONLY "public"."hint"
    ADD CONSTRAINT "public_hint_question_id_fkey" FOREIGN KEY ("question_id") REFERENCES "public"."question"("id");

ALTER TABLE ONLY "public"."participant_answer"
    ADD CONSTRAINT "public_participant_answer_participant_id_fkey" FOREIGN KEY ("participant_id") REFERENCES "public"."participant"("id");

ALTER TABLE ONLY "public"."participant_answer"
    ADD CONSTRAINT "public_participant_answer_question_id_fkey" FOREIGN KEY ("question_id") REFERENCES "public"."question"("id");  

ALTER TABLE ONLY "public"."participant"
    ADD CONSTRAINT "public_participant_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."game"("id");

ALTER TABLE ONLY "public"."question"
    ADD CONSTRAINT "public_question_topic_id_fkey" FOREIGN KEY ("topic_id") REFERENCES "public"."topic"("id");

ALTER TABLE ONLY "public"."topic"
    ADD CONSTRAINT "public_topic_quiz_id_fkey" FOREIGN KEY ("quiz_id") REFERENCES "public"."quiz"("id");

CREATE POLICY "Enable access for all users" ON "public"."participant" USING (true);

CREATE POLICY "Enable access for all users" ON "public"."participant_answer" USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."answer" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."question" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."quiz" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."topic" FOR SELECT USING (true);

ALTER TABLE "public"."answer" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."hint" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."participant" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."participant_answer" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."question" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."quiz" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."topic" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."answer" TO "anon";
GRANT ALL ON TABLE "public"."answer" TO "authenticated";
GRANT ALL ON TABLE "public"."answer" TO "service_role";

GRANT ALL ON SEQUENCE "public"."answer_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."answer_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."answer_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game" TO "anon";
GRANT ALL ON TABLE "public"."game" TO "authenticated";
GRANT ALL ON TABLE "public"."game" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."hint" TO "anon";
GRANT ALL ON TABLE "public"."hint" TO "authenticated";
GRANT ALL ON TABLE "public"."hint" TO "service_role";

GRANT ALL ON SEQUENCE "public"."hint_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."hint_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."hint_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."participant" TO "anon";
GRANT ALL ON TABLE "public"."participant" TO "authenticated";
GRANT ALL ON TABLE "public"."participant" TO "service_role";

GRANT ALL ON TABLE "public"."participant_answer" TO "anon";
GRANT ALL ON TABLE "public"."participant_answer" TO "authenticated";
GRANT ALL ON TABLE "public"."participant_answer" TO "service_role";

GRANT ALL ON TABLE "public"."question" TO "anon";
GRANT ALL ON TABLE "public"."question" TO "authenticated";
GRANT ALL ON TABLE "public"."question" TO "service_role";

GRANT ALL ON SEQUENCE "public"."question_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."question_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."question_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."quiz" TO "anon";
GRANT ALL ON TABLE "public"."quiz" TO "authenticated";
GRANT ALL ON TABLE "public"."quiz" TO "service_role";

GRANT ALL ON SEQUENCE "public"."quiz_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."quiz_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."quiz_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."topic" TO "anon";
GRANT ALL ON TABLE "public"."topic" TO "authenticated";
GRANT ALL ON TABLE "public"."topic" TO "service_role";

GRANT ALL ON SEQUENCE "public"."topic_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."topic_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."topic_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;